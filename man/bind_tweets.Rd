% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bind_tweets.R
\name{bind_tweets}
\alias{bind_tweets}
\alias{convert_json}
\title{Bind information stored as JSON files}
\usage{
bind_tweets(
  data_path,
  user = FALSE,
  verbose = TRUE,
  output_format = NA,
  vars = c("text", "user", "tweet_metrics", "user_metrics", "hashtags", "ext_urls",
    "mentions", "annotations", "context_annotations"),
  quoted_variables = F,
  parallel_workers = parallel::detectCores()
)

convert_json(
  data_file,
  output_format = "tidy",
  vars = c("text", "user", "tweet_metrics", "user_metrics", "hashtags", "ext_urls",
    "mentions", "annotations", "context_annotations"),
  quoted_variables = F
)
}
\arguments{
\item{data_path}{string, file path to directory of stored tweets data saved as data_\emph{id}.json and users_\emph{id}.json}

\item{user}{If \code{FALSE}, this function binds JSON files into a data frame containing tweets; data frame containing user information otherwise. Ignore if \code{output_format} is not NA}

\item{verbose}{If \code{FALSE}, messages are suppressed}

\item{output_format}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}} string, if it is not NA, this function return an unprocessed data.frame containing either tweets or user information. Currently, this function supports the following format(s)
\itemize{
\item{"raw"}{List of data frames; Note: not all data frames are in Boyce-Codd 3rd Normal Form}
\item{"tidy"}{Tidy format; all essential columns are available}
\item{"tidy2"}{Tidy format; additional variables (see vars) are available. Untruncates retweet text and adds indicators for retweets, quotes and replies. Automatically drops duplicated tweets. Handling of quoted tweets can be specified (see quoted_variables)}
}}

\item{vars}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}} vector of strings, determining the variables provided by the tidy2 format. Can be any (or all) of the following:
\itemize{
\item{"text"}{Text of the tweet, including language classification, indicator of sensitive content and (if applicable) sourcetweet text}
\item{"user"}{Information on the user in addition to their ID}
\item{"tweet_metrics"}{Tweet metrics, specifically the like, retweet and quote counts}
\item{"user_metrics"}{User metrics, specifically their tweet, list, follower and following counts}
\item{"hashtags"}{Hashtags contained in the tweet. Untrunctated for retweets}
\item{"ext_urls"}{Shortened and expanded URLs contained in the tweet, excluding those internal to Twitter (e.g. retweet URLs). Includes additional data provided by Twitter, such as the unwound URL, their title and description (if available). Untrunctated for retweets}
\item{"mentions"}{Mentioned usernames and their IDs, excluding retweeted users. Untrunctated for retweets. Note that quoted users are only mentioned here if explicitly named in the tweet text. This was usually the case with older versions of Twitter, but is no longer the standard behaviour. Extracting mentions allows the usernames of the RT authors (rather than only their ID) to be preserved}
\item{"annotations"}{Annotations provided by Twitter, including their probability and type. Basically Named Entities. See https://developer.twitter.com/en/docs/twitter-api/annotations/overview for details}
\item{"context_annotations"}{Context annotations provided by Twitter, including additional data on their domains. See https://developer.twitter.com/en/docs/twitter-api/annotations/overview for details}
}}

\item{quoted_variables}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}} Should additional vars be returned for the quoted tweet? Defaults to FALSE. TRUE returns additional "_quoted" var-columns containing the vars (mentions, hashtags, etc.) of the quoted tweet in addition to the actual tweet's data}

\item{parallel_workers}{number of threads used for parallel processing. Defaults to all detected threads. Only supported if the output_format is not NA}

\item{data_file}{string, a single file path to a JSON file; or a vector of file paths to JSON files of stored tweets data saved as data_\emph{id}.json}
}
\value{
a data.frame containing either tweets or user information
}
\description{
This function binds information stored as JSON files. The experimental function \code{convert_json} converts individual JSON files into either "raw" or "tidy" format.
}
\details{
By default, \code{bind_tweets} binds into a data frame containing tweets (from data_\emph{id}.json files).

If users is TRUE, it binds into a data frame containing user information (from users_\emph{id}.json).

Note that output of the tidy2 vars is strongly dependant on the returns of the Twitter API. This is due to the fact that, rather than extracting entities from the tweet text, tidy2 completely relies on the vars data returned by the API. While current search requests should return all these vars, older data might not contain certain data. This is especially true for annotations (named entities) and context_annotations. As of now, these variables are also poorly supported by Twitter for the majority languages, with English being the language that provides comprehensive annnotations and context_annotions. This is equally the case for quoted_variables, where older data may not contain the necessary sourcetweet data to extract the vars for quoted tweets. This may be the case not only for annotations and context_annotations, but also hashtags, mentions and URLs.
}
\examples{
\dontrun{
# bind json files in the directory "data" into a data frame containing tweets
bind_tweets(data_path = "data/")

# bind json files in the directory "data" into a data frame containing user information
bind_tweets(data_path = "data/", user = TRUE)

# bind json files in the directory "data" into a "tidy" data frame / tibble
bind_tweets(data_path = "data/", user = TRUE, output_format = "tidy")

# bind json files in the directory "data" into a "tidy2" data frame / tibble, get hashtags and
# URLs for both original and quoted tweets
bind_tweets(data_path = "data/", user = TRUE, output_format = "tidy", 
            vars = c("hashtags", "ext_urls"),
            quoted_variables = T)
}
}
