tweets_lookup <-
  function(ids,
           bearer_token = get_bearer(),
           data_path = NULL,
           context_annotations = FALSE,
           bind_tweets = TRUE,
           verbose = TRUE,
           errors = FALSE){    
    
    # Building parameters for get_tweets()
    params <- list(
      tweet.fields = "attachments,author_id,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,public_metrics,possibly_sensitive,referenced_tweets,source,text,withheld", 
      user.fields = "created_at,description,entities,id,location,name,pinned_tweet_id,profile_image_url,protected,public_metrics,url,username,verified,withheld", 
      expansions = "author_id,entities.mentions.username,geo.place_id,in_reply_to_user_id,referenced_tweets.id,referenced_tweets.id.author_id", 
      place.fields = "contained_within,country,country_code,full_name,geo,id,name,place_type"
    )
    if (context_annotations) {
      params[["tweet.fields"]] <- "attachments,author_id,context_annotations,conversation_id,created_at,entities,geo,id,in_reply_to_user_id,lang,public_metrics,possibly_sensitive,referenced_tweets,source,text,withheld"
    }
    # loop through x in batches of 100 IDs
    new_df <- data.frame()
    for (i in 1:ceiling(length(ids) / 100)){
      batch <- ids[((i-1)*100+1):min(length(ids),(i*100))]
      endpoint_url <- sprintf('https://api.twitter.com/2/tweets?ids=%s', paste0(batch, collapse = ","))
      
      # Get tweets
      .vcat(verbose, "Batch", i, "out of", ceiling(length(ids) / 100),": ids", head(batch, n = 1), "to", tail(batch, n = 1), "\n")
      new_rows <- get_tweets_with_errors(params = params, endpoint_url = endpoint_url, n = Inf, file = NULL, bearer_token = bearer_token, 
                             export_query = FALSE, data_path = data_path, bind_tweets = bind_tweets, verbose = F, errors = errors)
      if (errors){
        .vcat(verbose, "Retrieved", nrow(dplyr::filter(new_rows, is.na(error))), "out of", length(batch), "\n" , 
              "Errors:", nrow(dplyr::filter(new_rows, !is.na(error))), "\n" )
      } else {
        .vcat(verbose, "Retrieved", nrow(new_rows), "out of", length(batch), "\n")}
      if (nrow(new_rows) > 0) {
        #  new_rows$from_tweet_id <- batch[batch %in% new_rows$id]
        new_df <- dplyr::bind_rows(new_df, new_rows) # add new rows
      }
      if (errors) {
      .vcat(verbose, "Total Tweets:", nrow(dplyr::filter(new_df, is.na(error))), "\n")
      } else {
      .vcat(verbose, "Total Tweets:", nrow(new_df), "\n")
      }
    }
    new_df # return the df
  }
